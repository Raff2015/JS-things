{"id":"node_modules/ololog/build/ololog.js","dependencies":[{"name":"C:\\Users\\Raff_8\\Desktop\\Complete Intro to Web Development -v2 Brian Holt\\Animation\\package.json","includedInParent":true,"mtime":1588558791670},{"name":"C:\\Users\\Raff_8\\Desktop\\Complete Intro to Web Development -v2 Brian Holt\\Animation\\node_modules\\ololog\\package.json","includedInParent":true,"mtime":1588558757558},{"name":"C:\\Users\\Raff_8\\Desktop\\Complete Intro to Web Development -v2 Brian Holt\\Animation\\node_modules\\ololog\\.babelrc","includedInParent":true,"mtime":1510234283000},{"name":"stacktracey","loc":{"line":14,"column":26},"parent":"C:\\Users\\Raff_8\\Desktop\\Complete Intro to Web Development -v2 Brian Holt\\Animation\\node_modules\\ololog\\build\\ololog.js","resolved":"C:\\Users\\Raff_8\\Desktop\\Complete Intro to Web Development -v2 Brian Holt\\Animation\\node_modules\\stacktracey\\stacktracey.js"},{"name":"ansicolor","loc":{"line":15,"column":19},"parent":"C:\\Users\\Raff_8\\Desktop\\Complete Intro to Web Development -v2 Brian Holt\\Animation\\node_modules\\ololog\\build\\ololog.js","resolved":"C:\\Users\\Raff_8\\Desktop\\Complete Intro to Web Development -v2 Brian Holt\\Animation\\node_modules\\ansicolor\\build\\ansicolor.js"},{"name":"string.bullet","loc":{"line":16,"column":21},"parent":"C:\\Users\\Raff_8\\Desktop\\Complete Intro to Web Development -v2 Brian Holt\\Animation\\node_modules\\ololog\\build\\ololog.js","resolved":"C:\\Users\\Raff_8\\Desktop\\Complete Intro to Web Development -v2 Brian Holt\\Animation\\node_modules\\string.bullet\\string.bullet.js"},{"name":"pipez","loc":{"line":17,"column":20},"parent":"C:\\Users\\Raff_8\\Desktop\\Complete Intro to Web Development -v2 Brian Holt\\Animation\\node_modules\\ololog\\build\\ololog.js","resolved":"C:\\Users\\Raff_8\\Desktop\\Complete Intro to Web Development -v2 Brian Holt\\Animation\\node_modules\\pipez\\build\\pipez.es5.js"},{"name":"string.ify","loc":{"line":21,"column":25},"parent":"C:\\Users\\Raff_8\\Desktop\\Complete Intro to Web Development -v2 Brian Holt\\Animation\\node_modules\\ololog\\build\\ololog.js","resolved":"C:\\Users\\Raff_8\\Desktop\\Complete Intro to Web Development -v2 Brian Holt\\Animation\\node_modules\\string.ify\\build\\string.ify.js"},{"name":"printable-characters","loc":{"line":57,"column":23},"parent":"C:\\Users\\Raff_8\\Desktop\\Complete Intro to Web Development -v2 Brian Holt\\Animation\\node_modules\\ololog\\build\\ololog.js","resolved":"C:\\Users\\Raff_8\\Desktop\\Complete Intro to Web Development -v2 Brian Holt\\Animation\\node_modules\\printable-characters\\build\\printable-characters.js"}],"generated":{"js":"\"use strict\";\n\n/*  ------------------------------------------------------------------------ */\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nfunction _defineEnumerableProperties(obj, descs) { for (var key in descs) { var desc = descs[key]; desc.configurable = desc.enumerable = true; if (\"value\" in desc) desc.writable = true; Object.defineProperty(obj, key, desc); } return obj; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }\n\nvar O = Object,\n    StackTracey = require('stacktracey'),\n    ansi = require('ansicolor'),\n    bullet = require('string.bullet'),\n    pipez = require('pipez');\n\n/*  ------------------------------------------------------------------------ */\n\nvar _stringify = require('string.ify').configure({\n    formatter: function formatter(x, stringify) {\n\n        if (x instanceof Error && !(typeof Symbol !== 'undefined' && x[Symbol.for('String.ify')])) {\n\n            if (stringify.state.depth > 0) return '<Error: ' + x.message + '>'; // prevents unwanted pretty printing for Errors that are properties of complex objects\n\n            var indent = '    ',\n                why = stringify.limit((x.message || '').replace(/\\r|\\n/g, '').trim(), 120),\n                stack = new StackTracey(x).pretty,\n                stackIndented = stack.split('\\n').map(function (x) {\n                return indent + x;\n            }).join('\\n'),\n                isAssertion = 'actual' in x && 'expected' in x,\n                type = x.constructor.name || 'Error';\n\n            if (isAssertion) {\n\n                var str = stringify.configure({ maxStringLength: Number.MAX_VALUE, maxDepth: 8 });\n\n                var actual = bullet(indent + 'actual:   ', str(x.actual)),\n                    expected = bullet(indent + 'expected: ', str(x.expected));\n\n                if (actual.split('\\n').length > 1 || expected.split('\\n').length > 1) // if multiline actual/expected, need extra whitespace inbetween\n                    actual += '\\n';\n\n                return '[' + type + '] ' + why + '\\n\\n' + ansi.red(actual) + '\\n' + ansi.green(expected) + '\\n\\n' + stackIndented + '\\n';\n            } else {\n                return '[' + type + '] ' + why + '\\n\\n' + stackIndented + '\\n';\n            }\n        }\n    }\n});\n\n/*  ------------------------------------------------------------------------ */\n\nvar _require = require('printable-characters'),\n    isBlank = _require.isBlank,\n    blank = _require.blank,\n    changeLastNonemptyLine = function changeLastNonemptyLine(lines, fn) {\n\n    for (var i = lines.length - 1; i >= 0; i--) {\n\n        if (i === 0 || !isBlank(lines[i])) {\n\n            lines[i] = fn(lines[i]);\n            break;\n        }\n    }\n    return lines;\n};\n\n/*  ------------------------------------------------------------------------ */\n\nvar log = pipez({\n\n    /*  ------------------------------------------------------------------------ */\n\n    stringify: function stringify(args, cfg) {\n        var print = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _stringify.configure(cfg);\n        return args.map(function (arg) {\n            return typeof arg === 'string' ? arg : print(arg);\n        });\n    },\n\n    trim: function trim(tokens, _ref) {\n        var _ref$max = _ref.max,\n            max = _ref$max === undefined ? undefined : _ref$max;\n        return !max ? tokens : tokens.map(function (t) {\n            return _stringify.limit(t, max);\n        });\n    },\n\n    lines: function lines(tokens, _ref2) {\n        var _ref2$linebreak = _ref2.linebreak,\n            linebreak = _ref2$linebreak === undefined ? '\\n' : _ref2$linebreak;\n\n\n        var lines = [[]];\n        var leftPad = [];\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = tokens[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var t = _step.value;\n\n                var _t$split = t.split(linebreak),\n                    _t$split2 = _toArray(_t$split),\n                    first = _t$split2[0],\n                    rest = _t$split2.slice(1);\n\n                lines[lines.length - 1].push(first);\n                lines = [].concat(_toConsumableArray(lines), _toConsumableArray(rest.map(function (t) {\n                    return t ? [].concat(leftPad, [t]) : [];\n                })));\n\n                var pad = blank(!rest.length ? t : rest[rest.length - 1]);\n\n                if (pad) {\n                    leftPad.push(pad);\n                }\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n\n        return lines;\n    },\n\n    concat: function concat(lines, _ref3) {\n        var _ref3$separator = _ref3.separator,\n            separator = _ref3$separator === undefined ? ' ' : _ref3$separator;\n        return lines.map(function (tokens) {\n            return tokens.join(separator);\n        });\n    },\n\n    indent: function indent(lines, _ref4) {\n        var _ref4$level = _ref4.level,\n            level = _ref4$level === undefined ? 0 : _ref4$level,\n            _ref4$pattern = _ref4.pattern,\n            pattern = _ref4$pattern === undefined ? '\\t' : _ref4$pattern;\n        return lines.map(function (line) {\n            return pattern.repeat(level) + line;\n        });\n    },\n\n    time: function time(lines, _ref5) {\n        var _ref5$when = _ref5.when,\n            when = _ref5$when === undefined ? new Date() : _ref5$when,\n            _ref5$print = _ref5.print,\n            print = _ref5$print === undefined ? function (when) {\n            return ansi.darkGray(when.toISOString()) + '\\t';\n        } : _ref5$print;\n        return bullet(print(when), lines);\n    },\n\n    locate: function locate(lines, _ref6) {\n        var _ref6$shift = _ref6.shift,\n            shift = _ref6$shift === undefined ? 0 : _ref6$shift,\n            _ref6$where = _ref6.where,\n            where = _ref6$where === undefined ? new StackTracey().clean.at(2 + shift) : _ref6$where,\n            _ref6$join = _ref6.join,\n            join = _ref6$join === undefined ? function (a, sep, b) {\n            return a && b ? a + sep + b : a || b;\n        } : _ref6$join,\n            _ref6$print = _ref6.print,\n            print = _ref6$print === undefined ? function (_ref7) {\n            var calleeShort = _ref7.calleeShort,\n                _ref7$fileName = _ref7.fileName,\n                fileName = _ref7$fileName === undefined ? [] : _ref7$fileName,\n                _ref7$line = _ref7.line,\n                line = _ref7$line === undefined ? [] : _ref7$line;\n            return ansi.darkGray('(' + join(calleeShort, ' @ ', join(fileName, ':', line)) + ')');\n        } : _ref6$print;\n        return changeLastNonemptyLine(lines, function (line) {\n            return join(line, ' ', print(where));\n        });\n    },\n\n    join: function join(lines, _ref8) {\n        var _ref8$linebreak = _ref8.linebreak,\n            linebreak = _ref8$linebreak === undefined ? '\\n' : _ref8$linebreak;\n        return lines.join(linebreak);\n    },\n\n    render: function render(text, _ref9) {\n        var _ref9$engine = _ref9.engine,\n            engine = _ref9$engine === undefined ? typeof window !== 'undefined' && window.window === window && window.navigator ? navigator.userAgent.indexOf('Chrome') >= 0 ? 'chrome' : 'generic' : 'ansi' : _ref9$engine,\n            _ref9$engines = _ref9.engines,\n            engines = _ref9$engines === undefined ? {/* configurable */} : _ref9$engines,\n            _ref9$consoleMethod = _ref9.consoleMethod,\n            consoleMethod = _ref9$consoleMethod === undefined ? 'log' : _ref9$consoleMethod,\n            _ref9$defaults = _ref9.defaults,\n            defaults = _ref9$defaults === undefined ? {\n\n            ansi: function ansi(s) {\n                return console[consoleMethod](s);\n            },\n            chrome: function chrome(s) {\n                var _console;\n\n                return (_console = console)[consoleMethod].apply(_console, _toConsumableArray(ansi.parse(s).asChromeConsoleLogArguments));\n            },\n            generic: function generic(s) {\n                return console[consoleMethod](ansi.strip(s));\n            }\n        } : _ref9$defaults;\n        return text && O.assign(defaults, engines)[engine](text), text;\n    },\n\n    returnValue: function returnValue(__, _ref10) {\n        var _ref10$initialArgumen = _slicedToArray(_ref10.initialArguments, 1),\n            firstArgument = _ref10$initialArgumen[0];\n\n        return firstArgument;\n    }\n\n    /*  ------------------------------------------------------------------------ */\n\n}).configure({\n\n    time: false // disables 'time' step (until enabled back explicitly)\n\n    /*  ------------------------------------------------------------------------ */\n\n}).methods({\n\n    get null() {\n        return pipez({ returnValue: function returnValue(args) {\n                return args[0];\n            } }).methods(this.methods_);\n    },\n\n    indent: function indent(level) {\n        return this.configure({ indent: { level: level } });\n    },\n\n\n    get error() {\n        return this.configure({ render: { consoleMethod: 'error' } });\n    },\n    get warn() {\n        return this.configure({ render: { consoleMethod: 'warn' } });\n    },\n    get info() {\n        return this.configure({ render: { consoleMethod: 'info' } });\n    },\n\n    maxArrayLength: function maxArrayLength(n) {\n        return this.configure({ stringify: { maxArrayLength: n } });\n    },\n    maxDepth: function maxDepth(n) {\n        return this.configure({ stringify: { maxDepth: n } });\n    },\n    maxLength: function maxLength(n) {\n        return this.configure({ stringify: { maxLength: n } });\n    },\n\n\n    get unlimited() {\n        return this.configure({ stringify: { maxStringLength: Number.MAX_VALUE, maxArrayLength: Number.MAX_VALUE, maxDepth: Number.MAX_VALUE } });\n    },\n    get noPretty() {\n        return this.configure({ stringify: { pretty: false } });\n    },\n    get noLocate() {\n        return this.configure({ locate: false });\n    },\n    precision: function precision(n) {\n        return this.configure({ stringify: { precision: n } });\n    },\n\n\n    get serialize() {\n        return this.before('render');\n    },\n    get deserialize() {\n        return this.from('render');\n    },\n\n    newline: function newline() {\n        return this.from('join')(['']);\n    }\n});\n\n/*  ------------------------------------------------------------------------ */\n\nansi.names.forEach(function (color) {\n    var _log$methods, _mutatorMap;\n\n    log.methods((_log$methods = {}, _mutatorMap = {}, _mutatorMap[color] = _mutatorMap[color] || {}, _mutatorMap[color].get = function () {\n        return this.configure({ 'concat+': function concat(lines) {\n                return lines.map(ansi[color]);\n            } });\n    }, _defineEnumerableProperties(_log$methods, _mutatorMap), _log$methods));\n});\n\n/*  ------------------------------------------------------------------------ */\n\nmodule.exports = log;\n\n/*  ------------------------------------------------------------------------ */\n\n"},"sourceMaps":{"js":{"version":3,"sources":["../ololog.js"],"names":[],"mappings":"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","file":"ololog.js","sourcesContent":["\"use strict\";\n\n/*  ------------------------------------------------------------------------ */\n\nconst O                 = Object\n    , StackTracey       = require ('stacktracey')\n    , ansi              = require ('ansicolor')\n    , bullet            = require ('string.bullet')\n    , pipez             = require ('pipez')\n\n/*  ------------------------------------------------------------------------ */\n\n\nconst stringify = require ('string.ify').configure ({\n\n    formatter (x, stringify) {\n\n        if ((x instanceof Error) && !(typeof Symbol !== 'undefined' && x[Symbol.for ('String.ify')])) {\n\n            if (stringify.state.depth > 0) return `<Error: ${x.message}>` // prevents unwanted pretty printing for Errors that are properties of complex objects\n\n            const indent        = '    '\n                , why           = stringify.limit ((x.message || '').replace (/\\r|\\n/g, '').trim (), 120)\n                , stack         = new StackTracey (x).pretty\n                , stackIndented = stack.split ('\\n').map (x => indent + x).join ('\\n')\n                , isAssertion = ('actual' in x) && ('expected' in x)\n                , type        = x.constructor.name || 'Error'\n\n            if (isAssertion) {\n\n                const str = stringify.configure ({ maxStringLength: Number.MAX_VALUE, maxDepth: 8 })\n                \n                let actual   = bullet (indent + 'actual:   ', str (x.actual))\n                  , expected = bullet (indent + 'expected: ', str (x.expected))\n\n                if ((actual.split ('\\n').length > 1) || (expected.split ('\\n').length > 1)) // if multiline actual/expected, need extra whitespace inbetween\n                    actual += '\\n'\n\n                return `[${type}] ${why}\\n\\n${ansi.red (actual)}\\n${ansi.green (expected)}\\n\\n${stackIndented}\\n`\n                \n            } else {\n                return `[${type}] ${why}\\n\\n${stackIndented}\\n`\n            }\n        }\n    }\n})\n\n/*  ------------------------------------------------------------------------ */\n\nconst { isBlank, blank } = require ('printable-characters')\n\n    , changeLastNonemptyLine = (lines, fn) => {\n\n        for (let i = lines.length - 1; i >= 0; i--) {\n            \n            if ((i === 0) || !isBlank (lines[i])) {\n                \n                lines[i] = fn (lines[i])\n                break;\n            }\n        }\n        return lines\n    }\n\n/*  ------------------------------------------------------------------------ */\n\nconst log = pipez ({\n\n/*  ------------------------------------------------------------------------ */\n\n    stringify: (args, cfg, print = stringify.configure (cfg)) => args.map (arg => (typeof arg === 'string') ? arg : print (arg)),\n    \n    trim: (tokens, { max = undefined }) => !max ? tokens : tokens.map (t => stringify.limit (t, max)),\n\n    lines: (tokens, { linebreak = '\\n' }) => {\n\n        let lines = [[]]\n        let leftPad = []\n\n        for (const t of tokens) {\n\n            const [first, ...rest] = t.split (linebreak)\n\n            lines[lines.length - 1].push (first)\n            lines = [...lines, ...rest.map (t => t ? [...leftPad, t] : [])]\n\n            const pad = blank (!rest.length ? t : rest[rest.length - 1])\n            \n            if (pad) { leftPad.push (pad) }\n        }\n\n        return lines\n    },\n\n    concat: (lines, { separator = ' ' }) => lines.map (tokens => tokens.join (separator)),\n\n    indent: (lines, { level = 0, pattern = '\\t' }) => lines.map (line => pattern.repeat (level) + line),\n    \n    time: (lines, { when  = new Date (),\n                    print = when => ansi.darkGray (when.toISOString ()) + '\\t' }) => bullet (print (when), lines),\n\n    locate: (lines, {\n\n                    shift = 0,\n                    where = (new StackTracey ().clean.at (2 + shift)),\n                    join  = ((a, sep, b) => (a && b) ? (a + sep + b) : (a || b)),\n                    print = ({ calleeShort, fileName = [], line = [] }) => ansi.darkGray ('(' + join (calleeShort, ' @ ', join (fileName, ':', line)) + ')')\n\n                }) => changeLastNonemptyLine (lines, line => join (line, ' ', print (where))),\n\n    join: (lines, { linebreak = '\\n' }) => lines.join (linebreak),\n\n    render: (text, {\n\n        engine = ((typeof window !== 'undefined') && (window.window === window) && window.navigator)\n\n                            ? (navigator.userAgent.indexOf ('Chrome') >= 0)\n\n                                ? 'chrome'\n                                : 'generic'\n\n                            : 'ansi',\n\n        engines = { /* configurable */ },\n\n        consoleMethod = 'log',\n\n        defaults = {\n\n            ansi:    s => console[consoleMethod] (s),\n            chrome:  s => console[consoleMethod] (...ansi.parse (s).asChromeConsoleLogArguments),\n            generic: s => console[consoleMethod] (ansi.strip (s))\n        }\n\n    }) => ((text && O.assign (defaults, engines)[engine] (text), text)),\n\n    returnValue: (__, { initialArguments: [firstArgument] }) => firstArgument\n\n/*  ------------------------------------------------------------------------ */\n\n}).configure ({\n\n    time: false // disables 'time' step (until enabled back explicitly)\n\n/*  ------------------------------------------------------------------------ */\n\n}).methods ({\n\n    get null () { return pipez ({ returnValue: args => args[0] }).methods (this.methods_) },\n\n    indent (level) { return this.configure ({ indent: { level: level }}) },\n\n    get error () { return this.configure ({ render: { consoleMethod: 'error' } }) },\n    get warn ()  { return this.configure ({ render: { consoleMethod: 'warn' } }) },\n    get info ()  { return this.configure ({ render: { consoleMethod: 'info' } }) },\n\n    maxArrayLength (n) { return this.configure ({ stringify: { maxArrayLength: n } }) },\n    maxDepth (n)       { return this.configure ({ stringify: { maxDepth: n } }) },\n    maxLength (n)      { return this.configure ({ stringify: { maxLength: n } }) },\n    \n    get unlimited () { return this.configure ({ stringify: { maxStringLength: Number.MAX_VALUE, maxArrayLength: Number.MAX_VALUE, maxDepth: Number.MAX_VALUE } }) },\n    get noPretty () { return this.configure ({ stringify: { pretty: false } }) },\n    get noLocate () { return this.configure ({ locate: false }) },\n    precision (n) { return this.configure ({ stringify: { precision: n } }) },\n\n    get serialize () { return this.before ('render') },\n    get deserialize () { return this.from ('render') },\n\n    newline () { return this.from ('join')(['']) }\n})\n\n/*  ------------------------------------------------------------------------ */\n\nansi.names.forEach (color => {\n\n    log.methods ({\n\n        get [color] () { return this.configure ({ 'concat+': lines => lines.map (ansi[color]) }) }\n    })\n})\n\n/*  ------------------------------------------------------------------------ */\n\nmodule.exports = log\n\n/*  ------------------------------------------------------------------------ */\n\n\n"]}},"error":null,"hash":"f7c4372056aa103d323feac1a9f8a5e1","cacheData":{"env":{}}}