{"id":"node_modules/stacktracey/impl/partition.js","dependencies":[{"name":"C:\\Users\\Raff_8\\Desktop\\Complete Intro to Web Development -v2 Brian Holt\\Animation\\package.json","includedInParent":true,"mtime":1588558791670},{"name":"C:\\Users\\Raff_8\\Desktop\\Complete Intro to Web Development -v2 Brian Holt\\Animation\\node_modules\\stacktracey\\package.json","includedInParent":true,"mtime":1588558761538}],"generated":{"js":"\"use strict\";\n\nmodule.exports = (arr_, pred) => {\n\n    const arr   = arr_ || [],\n          spans = []\n    \n    let span = { label: undefined,\n                 items: [arr.first] }\n                 \n    arr.forEach (x => {\n\n        const label = pred (x)\n\n        if ((span.label !== label) && span.items.length) {\n            spans.push (span = { label: label, items: [x] }) }\n\n        else {\n            span.items.push (x) } })\n\n    return spans\n}"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/stacktracey/impl/partition.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/stacktracey/impl/partition.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/stacktracey/impl/partition.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/stacktracey/impl/partition.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/stacktracey/impl/partition.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/stacktracey/impl/partition.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/stacktracey/impl/partition.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/stacktracey/impl/partition.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/stacktracey/impl/partition.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/stacktracey/impl/partition.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/stacktracey/impl/partition.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/stacktracey/impl/partition.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/stacktracey/impl/partition.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/stacktracey/impl/partition.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/stacktracey/impl/partition.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/stacktracey/impl/partition.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/stacktracey/impl/partition.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/stacktracey/impl/partition.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/stacktracey/impl/partition.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/stacktracey/impl/partition.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/stacktracey/impl/partition.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/stacktracey/impl/partition.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}}],"sources":{"node_modules/stacktracey/impl/partition.js":"\"use strict\";\n\nmodule.exports = (arr_, pred) => {\n\n    const arr   = arr_ || [],\n          spans = []\n    \n    let span = { label: undefined,\n                 items: [arr.first] }\n                 \n    arr.forEach (x => {\n\n        const label = pred (x)\n\n        if ((span.label !== label) && span.items.length) {\n            spans.push (span = { label: label, items: [x] }) }\n\n        else {\n            span.items.push (x) } })\n\n    return spans\n}"},"lineCount":22}},"error":null,"hash":"3713136a8c93b53fb3fd8a5a67103a22","cacheData":{"env":{}}}