{"id":"node_modules/data-uri-to-buffer/index.js","dependencies":[{"name":"C:\\Users\\Raff_8\\Desktop\\Complete Intro to Web Development -v2 Brian Holt\\Animation\\package.json","includedInParent":true,"mtime":1588558791670},{"name":"C:\\Users\\Raff_8\\Desktop\\Complete Intro to Web Development -v2 Brian Holt\\Animation\\node_modules\\data-uri-to-buffer\\package.json","includedInParent":true,"mtime":1588558767507},{"name":"buffer","parent":"C:\\Users\\Raff_8\\Desktop\\Complete Intro to Web Development -v2 Brian Holt\\Animation\\node_modules\\data-uri-to-buffer\\index.js","resolved":"C:\\Users\\Raff_8\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict';\n\n/**\n * Module exports.\n */\n\nmodule.exports = dataUriToBuffer;\n\n/**\n * Returns a `Buffer` instance from the given data URI `uri`.\n *\n * @param {String} uri Data URI to turn into a Buffer instance\n * @return {Buffer} Buffer instance from Data URI\n * @api public\n */\n\nfunction dataUriToBuffer(uri) {\n  if (!/^data\\:/i.test(uri)) {\n    throw new TypeError(\n      '`uri` does not appear to be a Data URI (must begin with \"data:\")'\n    );\n  }\n\n  // strip newlines\n  uri = uri.replace(/\\r?\\n/g, '');\n\n  // split the URI up into the \"metadata\" and the \"data\" portions\n  var firstComma = uri.indexOf(',');\n  if (-1 === firstComma || firstComma <= 4) {\n    throw new TypeError('malformed data: URI');\n  }\n\n  // remove the \"data:\" scheme and parse the metadata\n  var meta = uri.substring(5, firstComma).split(';');\n\n  var type = meta[0] || 'text/plain';\n  var typeFull = type;\n  var base64 = false;\n  var charset = '';\n  for (var i = 1; i < meta.length; i++) {\n    if ('base64' == meta[i]) {\n      base64 = true;\n    } else {\n      typeFull += ';' + meta[i];\n      if (0 == meta[i].indexOf('charset=')) {\n        charset = meta[i].substring(8);\n      }\n    }\n  }\n  // defaults to US-ASCII only if type is not provided\n  if (!meta[0] && !charset.length) {\n    typeFull += ';charset=US-ASCII';\n    charset = 'US-ASCII';\n  }\n\n  // get the encoded data portion and decode URI-encoded chars\n  var data = unescape(uri.substring(firstComma + 1));\n\n  var encoding = base64 ? 'base64' : 'ascii';\n  var buffer = Buffer.from ? Buffer.from(data, encoding) : new Buffer(data, encoding);\n\n  // set `.type` and `.typeFull` properties to MIME type\n  buffer.type = type;\n  buffer.typeFull = typeFull;\n\n  // set the `.charset` property\n  buffer.charset = charset;\n\n  return buffer;\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/data-uri-to-buffer/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}}],"sources":{"node_modules/data-uri-to-buffer/index.js":"'use strict';\n\n/**\n * Module exports.\n */\n\nmodule.exports = dataUriToBuffer;\n\n/**\n * Returns a `Buffer` instance from the given data URI `uri`.\n *\n * @param {String} uri Data URI to turn into a Buffer instance\n * @return {Buffer} Buffer instance from Data URI\n * @api public\n */\n\nfunction dataUriToBuffer(uri) {\n  if (!/^data\\:/i.test(uri)) {\n    throw new TypeError(\n      '`uri` does not appear to be a Data URI (must begin with \"data:\")'\n    );\n  }\n\n  // strip newlines\n  uri = uri.replace(/\\r?\\n/g, '');\n\n  // split the URI up into the \"metadata\" and the \"data\" portions\n  var firstComma = uri.indexOf(',');\n  if (-1 === firstComma || firstComma <= 4) {\n    throw new TypeError('malformed data: URI');\n  }\n\n  // remove the \"data:\" scheme and parse the metadata\n  var meta = uri.substring(5, firstComma).split(';');\n\n  var type = meta[0] || 'text/plain';\n  var typeFull = type;\n  var base64 = false;\n  var charset = '';\n  for (var i = 1; i < meta.length; i++) {\n    if ('base64' == meta[i]) {\n      base64 = true;\n    } else {\n      typeFull += ';' + meta[i];\n      if (0 == meta[i].indexOf('charset=')) {\n        charset = meta[i].substring(8);\n      }\n    }\n  }\n  // defaults to US-ASCII only if type is not provided\n  if (!meta[0] && !charset.length) {\n    typeFull += ';charset=US-ASCII';\n    charset = 'US-ASCII';\n  }\n\n  // get the encoded data portion and decode URI-encoded chars\n  var data = unescape(uri.substring(firstComma + 1));\n\n  var encoding = base64 ? 'base64' : 'ascii';\n  var buffer = Buffer.from ? Buffer.from(data, encoding) : new Buffer(data, encoding);\n\n  // set `.type` and `.typeFull` properties to MIME type\n  buffer.type = type;\n  buffer.typeFull = typeFull;\n\n  // set the `.charset` property\n  buffer.charset = charset;\n\n  return buffer;\n}\n"},"lineCount":72}},"error":null,"hash":"5b61224cf4223b1d9ec748b070bad490","cacheData":{"env":{}}}